package io.specmatic.gradle.autogen

import org.gradle.api.Project
import org.gradle.api.Task
import org.gradle.api.plugins.JavaPlugin
import org.gradle.api.tasks.Delete
import org.gradle.api.tasks.SourceSetContainer
import org.gradle.api.tasks.TaskProvider
import org.gradle.api.tasks.bundling.AbstractArchiveTask
import org.gradle.api.tasks.compile.JavaCompile
import org.gradle.kotlin.dsl.get
import org.gradle.kotlin.dsl.the
import org.gradle.language.jvm.tasks.ProcessResources
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
import java.io.File

internal fun Project.generatedResourcesDir(): File = file("src/main/gen-resources")

internal fun Project.generatedKotlinSourcesDir(): File = file("src/main/gen-kt")

internal fun Project.registerAutoGeneratedKotlinSourceTask(vararg tasks: Any?) {
    project.getAutoGenerateKotlinSourcesTask().configure {
        dependsOn(tasks)
    }
}

internal fun Project.registerAutoGeneratedResourcesTask(vararg tasks: Any?) {
    project.getAutoGenerateResourcesTask().configure {
        dependsOn(tasks)
    }
}

internal fun Project.setupAutoGeneratedResourceHookTasks() {
    val generatedKotlinSourcesDir = generatedKotlinSourcesDir()
    val generatedResourcesDir = generatedResourcesDir()

    tasks.withType(Delete::class.java) {
        delete(generatedKotlinSourcesDir)
        delete(generatedResourcesDir)
    }

    val autoGenerateResources = getAutoGenerateResourcesTask()

    val autoGenerateKotlinSources = getAutoGenerateKotlinSourcesTask()

    tasks.withType(ProcessResources::class.java) {
        dependsOn(autoGenerateResources)
    }
    tasks.withType(JavaCompile::class.java) {
        dependsOn(autoGenerateKotlinSources)
    }
    tasks.withType(KotlinCompile::class.java) {
        dependsOn(autoGenerateKotlinSources)
    }
    tasks.withType(AbstractArchiveTask::class.java) {
        dependsOn(autoGenerateKotlinSources)
        dependsOn(autoGenerateResources)
    }

    plugins.withType(JavaPlugin::class.java) {
        project.the<SourceSetContainer>()["main"].java.srcDir(project.generatedKotlinSourcesDir())
        project.the<SourceSetContainer>()["main"].resources.srcDir(project.generatedResourcesDir())
    }
}

private fun Project.getAutoGenerateKotlinSourcesTask(): TaskProvider<Task> {
    if (project.tasks.findByName("autoGenerateKotlinSources") != null) {
        return project.tasks.named("autoGenerateKotlinSources")
    }

    return this.tasks.register("autoGenerateKotlinSources") {
        this.group = "build"
        this.description = "Hook to auto-generate sources"
    }
}

private fun Project.getAutoGenerateResourcesTask(): TaskProvider<Task> {
    if (project.tasks.findByName("autoGenerateResources") != null) {
        return project.tasks.named("autoGenerateResources")
    }

    return this.tasks.register("autoGenerateResources") {
        this.group = "build"
        this.description = "Hook to auto-generate resources"
    }
}
