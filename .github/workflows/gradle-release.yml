name: Release

on:
  workflow_dispatch:
    inputs:
      bump_type:
        description: 'The part of the version to bump, after cutting a release'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:

      - name: 'Build/test'
        uses: znsio/specmatic-github-workflows/action-build-gradle@main

      - name: 'Release'
        run: |
          RELEASE_VERSION=$(semver get release $(/usr/bin/grep -E '^\s*version\s*=' gradle.properties | /usr/bin/sed -E -e 's/^\s*version\s*=//g'))
          NEXT_VERSION=$(semver bump ${{ github.event.inputs.bump_type }} $(/usr/bin/grep -E '^\s*version\s*=' gradle.properties | /usr/bin/sed -E -e 's/^\s*version\s*=//g'))-SNAPSHOT
          echo "Making a release with version $RELEASE_VERSION and next version $NEXT_VERSION..."

          ./gradlew release \
            -Prelease.useAutomaticVersion=true \
            -Prelease.releaseVersion=${RELEASE_VERSION} \
            -Prelease.newVersion=${NEXT_VERSION} \
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: '${{ secrets.SPECMATIC_MAVEN_CENTRAL_USERNAME }}'
          ORG_GRADLE_PROJECT_mavenCentralPassword: '${{ secrets.SPECMATIC_MAVEN_CENTRAL_PASSWORD }}'
          ORG_GRADLE_PROJECT_signingInMemoryKey: '${{ secrets.SPECMATIC_GPG_PRIVATE_KEY }}'
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: '${{ secrets.SPECMATIC_GPG_KEY_ID }}'
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: '${{ secrets.SPECMATIC_GPG_PRIVATE_KEY_PASSPHRASE }}'
          ORG_GRADLE_PROJECT_specmaticPrivateUsername: '${{ secrets.SPECMATIC_GITHUB_USER }}'
          ORG_GRADLE_PROJECT_specmaticPrivatePassword: '${{ secrets.SPECMATIC_GITHUB_TOKEN }}'
          GRADLE_PUBLISH_KEY: '${{ secrets.SPECMATIC_GRADLE_PUBLISH_KEY }}'
          GRADLE_PUBLISH_SECRET: '${{ secrets.SPECMATIC_GRADLE_PUBLISH_SECRET }}'
